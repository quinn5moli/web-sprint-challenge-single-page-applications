{"version":3,"sources":["components/HomePage.js","components/Response.js","components/Form.js","components/Nav.js","components/Header.js","App.js","index.js"],"names":["HomePage","props","Response","foodOrder","name","Form","useState","size","pepperoni","pesto","sausage","pineapple","canadianBacon","jalapeno","specialText","setFoodOrder","disabled","setDisabled","submitOrder","setSubmitOrder","changeHandler","evt","value","target","type","checked","schema","yup","shape","required","min","greenPepper","dicedTomatoes","roastedGarlic","useEffect","isValid","then","valid","id","onSubmit","preventDefault","console","log","htmlFor","onChange","typ","placeholder","Nav","to","Header","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"oKAUeA,MARf,SAAkBC,GACd,OACI,8BACI,yC,wBCMGC,EATE,SAAAD,GACb,IAAOE,EAAaF,EAAbE,UACH,OACI,8BACI,4CAAeA,EAAUC,KAAzB,uC,OCmJDC,G,OApJF,WACT,MAAkCC,mBAAS,CACvCF,KAAK,GACLG,KAAK,GACLC,WAAW,EACXC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,YAAY,KAThB,mBAAOX,EAAP,KAAkBY,EAAlB,KAYQX,EAA0FD,EAA1FC,KAAMG,EAAoFJ,EAApFI,KAAMC,EAA8EL,EAA9EK,UAAWC,EAAmEN,EAAnEM,MAAOC,EAA4DP,EAA5DO,QAASC,EAAmDR,EAAnDQ,UAAWC,EAAwCT,EAAxCS,cAAeC,EAAyBV,EAAzBU,SAAUC,EAAeX,EAAfW,YAEnF,EAA+BR,oBAAS,GAAxC,mBAAOU,EAAP,KAAiBC,EAAjB,KAEA,EAAsCX,oBAAS,GAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAEMC,EAAgB,SAAAC,GAClB,IAAMC,EAA4B,aAApBD,EAAIE,OAAOC,KAAsBH,EAAIE,OAAOE,QAAUJ,EAAIE,OAAOD,MAC/EP,EAAa,2BAAIZ,GAAL,kBAAiBkB,EAAIE,OAAOnB,KAAOkB,MAG7CI,EAASC,MAAaC,MAAM,CAC9BxB,KAAMuB,MAEDE,SAAS,iBACTC,IAAI,EAAG,sCACZvB,KAAMoB,MACNnB,UAAWmB,MACXjB,QAASiB,MACTf,cAAee,MACfI,YAAaJ,MACbK,cAAeL,MACfM,cAAeN,MACfhB,UAAWgB,MACXb,YAAaa,QAejB,OANAO,qBAAU,WACNR,EACCS,QAAQhC,GACRiC,MAAK,SAAAC,GAAK,OAAIpB,GAAaoB,QAC7B,CAAClC,IAGA,gCACI,oDACCa,GAAY,sEACXE,GAAe,uBAAMoB,GAAI,aAAaC,SAhB1B,SAAAlB,GAClBA,EAAImB,iBACJC,QAAQC,IAAIvC,GACZgB,GAAe,IAaM,UACb,wBAAOwB,QAAQ,OAAf,iBAEI,uBAAOnB,KAAK,OAAOpB,KAAK,OAAOkC,GAAG,aAAahB,MAAOlB,EAAMwC,SAAUxB,OAE1E,wBAAOuB,QAAQ,OAAf,0BAEI,yBAAQvC,KAAO,OAAOkC,GAAI,gBAAgBhB,MAAOf,EAAMqC,SAAUxB,EAAjE,UACQ,wBAAQE,MAAM,QAAd,yBACA,wBAAQA,MAAM,UAAd,2BACA,wBAAQA,MAAM,QAAd,+BAGZ,uBACA,uBAAOqB,QAAQ,WAAf,yCAGI,wBAAOA,QAAQ,YAAf,UACI,uBACAlB,QAASjB,EACTgB,KAAK,WACLpB,KAAK,YACLkB,MAAQ,YACRsB,SAAUxB,IANd,eASJ,wBAAOuB,QAAQ,QAAf,UACQ,uBACAlB,QAAShB,EACTe,KAAK,WACLpB,KAAK,QACLkB,MAAQ,QACRsB,SAAUxB,IANlB,WASA,wBAAOuB,QAAQ,UAAf,UACQ,uBACAlB,QAASf,EACTc,KAAK,WACLpB,KAAK,UACLkB,MAAQ,UACRsB,SAAUxB,IANlB,aASA,wBAAOuB,QAAQ,YAAf,UACQ,uBACAlB,QAASd,EACTa,KAAK,WACLpB,KAAK,YACLkB,MAAQ,YACRsB,SAAUxB,IANlB,eASA,wBAAOuB,QAAQ,gBAAf,UACQ,uBACAlB,QAASb,EACTY,KAAK,WACLpB,KAAK,gBACLkB,MAAQ,gBACRsB,SAAUxB,IANlB,oBAUA,wBAAOuB,QAAQ,WAAf,UACQ,uBACAlB,QAASZ,EACTW,KAAK,WACLpB,KAAK,WACLkB,MAAQ,WACRsB,SAAUxB,IANlB,eAUA,wBAAOuB,QAAQ,eAAf,iCAEI,uBACAE,IAAI,OACJzC,KAAK,eACL0C,YAAY,kCACZxB,MAAOR,EACP8B,SAAUxB,OAGd,uBACA,wBAAQkB,GAAG,eAAed,KAAM,SAASR,SAAUA,EAAnD,8BAEHE,GAAe,cAAC,EAAD,CAAUf,UAAaA,S,QCvIpC4C,EATH,WACR,OACI,gCACI,cAAC,IAAD,CAAMT,GAAI,OAAOU,GAAG,IAApB,kBACA,cAAC,IAAD,CAAMV,GAAG,cAAcU,GAAG,SAA1B,4BCOGC,EAXA,WACX,OACI,gCACI,+CACA,2EACA,cAAC,EAAD,Q,OCUGC,EAZH,WACV,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,cAAC,IAAD,CAAOoD,KAAM,SAASC,UAAWhD,WCNzCiD,IAASC,OAAO,cAAC,IAAD,UAAQ,cAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.1745eccf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction HomePage(props) {\r\n    return (\r\n        <div>\r\n            <h3>Home</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst Response = props => {\r\n    const {foodOrder} = props;\r\n        return (\r\n            <div>\r\n                <h3>Thank you {foodOrder.name}, your order is being prepared</h3>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Response;","import React, {useEffect, useState} from 'react';\r\nimport Response from './Response';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst Form = () => {\r\n    const [foodOrder, setFoodOrder] = useState({\r\n        name:'',\r\n        size:'',\r\n        pepperoni: false,\r\n        pesto: false,\r\n        sausage: false,\r\n        pineapple: false,\r\n        canadianBacon: false,\r\n        jalapeno: false,\r\n        specialText:'',\r\n    })\r\n\r\n    const { name, size, pepperoni, pesto, sausage, pineapple, canadianBacon, jalapeno, specialText} = foodOrder;\r\n\r\n    const [disabled, setDisabled]= useState(true)\r\n\r\n    const [submitOrder, setSubmitOrder] = useState(false)\r\n\r\n    const changeHandler = evt => {\r\n        const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\r\n        setFoodOrder({...foodOrder, [evt.target.name]: value});\r\n    }\r\n\r\n    const schema = yup.object().shape({\r\n        name: yup\r\n            .string()\r\n            .required('Name required')\r\n            .min(2, 'name must be at least 2 characters'),\r\n        size: yup.string(),\r\n        pepperoni: yup.string(),\r\n        sausage: yup.string(),\r\n        canadianBacon: yup.string(),\r\n        greenPepper: yup.string(),\r\n        dicedTomatoes: yup.string(),\r\n        roastedGarlic: yup.string(),\r\n        pineapple: yup.string(),\r\n        specialText: yup.string(),\r\n    })\r\n\r\n    const submitHandler = evt=> {\r\n        evt.preventDefault();\r\n        console.log(foodOrder);\r\n        setSubmitOrder(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        schema\r\n        .isValid(foodOrder)\r\n        .then(valid => setDisabled(!valid))\r\n    }, [foodOrder])\r\n\r\n    return(\r\n        <div>\r\n            <h3>Build Your Own Pie</h3>\r\n            {disabled && <p>* Name must be at least 2 characters</p>}\r\n            {!submitOrder && <form id= 'pizza-form' onSubmit={submitHandler}>\r\n                <label htmlFor='name'>\r\n                    Name\r\n                    <input type='text' name='name' id='name-input' value={name} onChange={changeHandler} />\r\n                </label>\r\n                <label htmlFor='size'>\r\n                    Select a Size \r\n                    <select name = 'size' id= 'size-dropdown' value={size} onChange={changeHandler}>\r\n                            <option value='small'> Small(9\") </option>\r\n                            <option value='regular'>Regular (12\")</option>\r\n                            <option value='large'>Large (16\")</option>\r\n                        </select>  \r\n                </label>\r\n                <hr/>\r\n                <label htmlFor='toppings'>\r\n                    Add Toppings (pick up to 4)\r\n                </label>\r\n                    <label htmlFor='pepperoni'>\r\n                        <input \r\n                        checked={pepperoni} \r\n                        type='checkbox' \r\n                        name='pepperoni' \r\n                        value = 'pepperoni' \r\n                        onChange={changeHandler}/>\r\n                        Pepperoni\r\n                </label>\r\n                <label htmlFor='pesto'>\r\n                        <input \r\n                        checked={pesto} \r\n                        type='checkbox' \r\n                        name='pesto' \r\n                        value = 'pesto' \r\n                        onChange={changeHandler}/>\r\n                        Pesto\r\n                </label>\r\n                <label htmlFor='sausage'>\r\n                        <input \r\n                        checked={sausage} \r\n                        type='checkbox' \r\n                        name='sausage' \r\n                        value = 'sausage' \r\n                        onChange={changeHandler}/>\r\n                        Sausage\r\n                </label>\r\n                <label htmlFor='pineapple'>\r\n                        <input \r\n                        checked={pineapple} \r\n                        type='checkbox' \r\n                        name='pineapple' \r\n                        value = 'pineapple' \r\n                        onChange={changeHandler}/>\r\n                        Pineapple\r\n                </label>\r\n                <label htmlFor='canadianBacon'>\r\n                        <input \r\n                        checked={canadianBacon} \r\n                        type='checkbox' \r\n                        name='canadianBacon' \r\n                        value = 'canadianBacon' \r\n                        onChange={changeHandler}\r\n                        />\r\n                        Canadian Bacon\r\n                </label>\r\n                <label htmlFor='jalapeno'>\r\n                        <input \r\n                        checked={jalapeno} \r\n                        type='checkbox' \r\n                        name='jalapeno' \r\n                        value = 'jalapeno' \r\n                        onChange={changeHandler}\r\n                        />\r\n                        Jalapenos\r\n                </label>\r\n                <label htmlFor='special-text'>\r\n                    Special Instructions\r\n                    <input\r\n                    typ='text'\r\n                    name='special-text'\r\n                    placeholder='Anything you would like to add?'\r\n                    value={specialText}\r\n                    onChange={changeHandler}\r\n                    />\r\n                </label>\r\n                <hr/>\r\n                <button id='order-button' type ='submit' disabled={disabled}>Add to Order?</button>\r\n            </form>}\r\n            {submitOrder && <Response foodOrder = {foodOrder}/>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <div>\r\n            <Link id ='home' to='/'>Home</Link>\r\n            <Link id='order-pizza' to='/pizza'>Order Here</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Nav from '../components/Nav'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div>\r\n            <h2> Lambda Eats </h2>\r\n            <p>Your favorite food, delivered while coding</p>\r\n            <Nav/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport Form from \"./components/Form\";\r\nimport Header from \"./components/Header\";\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage}/>\r\n        <Route path ='/pizza' component={Form}/>\r\n      </Switch>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App/></Router>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}